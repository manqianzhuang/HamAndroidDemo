package com.superman.animate.design_mode.singletonclass SingleTonExample private constructor(){    companion object {        /**         * 饿汉式单例         * 优点：线程安全，执行效率高         * 缺点：类加载时就初始化，浪费内存         */        private val hungryInstance = SingleTonExample()        fun hungryInstance(): SingleTonExample {            return hungryInstance        }        /**         * 懒汉式单例         * 缺点：线程非安全，加Synchronized锁导致性能开销大         */        private var lazyInstance: SingleTonExample? = null        @Synchronized        fun lazyInstance(): SingleTonExample {            if (lazyInstance==null) {                lazyInstance = SingleTonExample()            }            return lazyInstance!!        }    }}