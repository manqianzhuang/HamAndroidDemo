package com.superman.animate.customview.day1import android.annotation.SuppressLintimport android.content.Contextimport android.graphics.*import android.util.AttributeSetimport android.view.Viewimport com.blankj.utilcode.util.LogUtilsimport com.superman.animate.Rclass ComposeShaperView(context: Context, attributeSet: AttributeSet) : View(context, attributeSet) {    private val paint = Paint()    override fun onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int) {        super.onMeasure(widthMeasureSpec, heightMeasureSpec)        var width = measuredWidth        var height = measuredHeight        LogUtils.e("ComposeShaperView","测量的宽和高 = $width x $height")        if (width==0 || height==0) {            width = if (width==0) 600 else width            height = if (height==0) 600 else height        }    }    @SuppressLint("DrawAllocation")    override fun onDraw(canvas: Canvas?) {        super.onDraw(canvas)        val bitmap1 = BitmapFactory.decodeResource(context.resources, R.mipmap.cat)        val shaper1 = BitmapShader(bitmap1, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP)        val bitmap2 = BitmapFactory.decodeResource(context.resources, R.mipmap.ok1)        val shaper2 = BitmapShader(bitmap2, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP)        val composeShaper = ComposeShader(shaper1, shaper2, PorterDuff.Mode.SRC_OVER)        paint.shader = composeShaper        canvas?.drawCircle(170f, 170f, 170f, paint)    }}